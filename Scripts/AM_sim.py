#!/usr/bin/python
#usage: python AM_sim.py >> outprior.txt

import random
import os
import math

#draws from the prior distribution 
Priorsize = 200000
Counter = 0

#number of total samples in the data set (number of individuals in the longest alignment)
Nsam = 33

#Create a directory to store al summary statistics estimates.
os.system("mkdir SuSt_exp")
os.system("mkdir temp_exp")

#while loop iterates draws from the prior for this model
while Counter < Priorsize:
	Model = random.randint(1,2)#Pick one of the 6 models at random

	sgsite = 3
	
	Btneck = random.uniform(0.01, 1.0)
	Expando =  random.uniform(1.0, 10)
	#Time <- DivTime/(genlen*4*Ne)
	#DivTime <- time in years (21000 anos)
	#genlen <- generation time
	#Ne <- effective population size (1000 - 50000)
	Time = random.uniform(0.001, 0.05)

	#Sample the model selected randomly
	
	#population bottleneck during last glacial period 
	if Model == 1:
		Expando =  0
		msString = "./ms %f 1 -s %f -eN %f %f" % (Nsam, sgsite, Time, Btneck)
		Counter += 1
		
	#population larger during last glacial period 
	elif Model == 2:
		Btneck = 0
		msString = "./ms %f 1 -s %f -eN %f %f" % (Nsam, sgsite, Time, Expando)
		Counter += 1

	#estimating summary statistics
	os.system("%s | ./sample_stats >> ./SuSt_exp/locus.txt" % (msString))

	#Print all parameters for each simulation
	print "_%s\t%f\t%f\t%f\t%f" % (Model, sgsite, Time, Btneck, Expando)


 	if Counter%100 == 0:
 		os.system("rm -rf log.txt")
 		os.system("rm -rf temp_exp/l*")
#remove temp%sorary file generated by arlsumstat
os.system("rm -rf log.txt")
os.system("rm -rf temp_exp")
